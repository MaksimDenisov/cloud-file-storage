plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id "org.sonarqube" version "6.2.0.5505"
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ru.denisovmaksim'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.projectlombok:lombok:1.18.28'
    compileOnly 'org.projectlombok:lombok:1.18.28'

    annotationProcessor(
            'org.projectlombok:lombok:1.18.28'
    )

    implementation(
            'org.springframework.boot:spring-boot-starter-web:3.1.0',
            'org.springframework.boot:spring-boot-starter-actuator:3.1.0',
            'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4',
            'org.springframework.boot:spring-boot-starter-validation:3.0.4',
            'org.springframework.boot:spring-boot-starter-data-redis:3.4.0',
            'org.springframework.session:spring-session-data-redis:3.4.0',
            'org.springframework.boot:spring-boot-starter-thymeleaf:3.2.4',
            'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0',
            'org.springframework.boot:spring-boot-starter-security:3.0.4',
            'mysql:mysql-connector-java:8.0.28',
            'io.minio:minio:8.5.11',
            'net.coobird:thumbnailator:0.4.20'
    )

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation "org.testcontainers:testcontainers:1.20.1"
    testImplementation "org.testcontainers:junit-jupiter:1.19.3"
    testImplementation "org.testcontainers:mysql:1.20.1"
    testImplementation "org.testcontainers:minio:1.20.6"
    testImplementation 'com.redis.testcontainers:testcontainers-redis:1.6.4'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

sonar {
    properties {
        property "sonar.projectKey", "MaksimDenisov_cloud-file-storage"
        property "sonar.organization", "maksimdenisov"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}